{"version":3,"sources":["components/AddCategory.js","helpers/Getgifs.js","components/GifGridItem.js","components/GridGif.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GridGif","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SATQ,SAACC,GACfA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAQ,OAAIP,GAAJ,mBAAkBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DACbC,EADa,iDACoCC,UAAUR,GAD9C,sDAEKS,MAAMF,GAFX,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEnC,OADAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAElB,sBAAKgB,UAAY,wCAAjB,UACI,qBAAKC,IAAOjB,EAAKkB,IAAOR,IACxB,4BAAIA,QCFHS,EAAU,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAItB,ECLwB,SAAEA,GAC1B,MAA0BR,mBAAS,CAC/BoB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNzB,EAAQL,GACP+B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAOoB,EACPL,SAAU,SAGnB,CAAC3B,IAEG4B,EDXyBK,CAAcjC,GAAhCkB,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAGtB,OAFAN,QAAQC,IAAIK,GAGR,qCACI,oBAAIJ,UAAY,wCAAhB,SAAyDvB,IAExD2B,GAAW,mBAAGJ,UAAY,uCAAf,wBAEZ,qBAAKA,UAAU,WAAf,SAIQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEctBkB,EA/BO,WAClB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmBC,EAAnB,KAQA,OACI,qCACI,+CACA,cAAC,EAAD,CAAa7C,cAAe6C,IAC5B,uBAEA,6BAEQD,EAAWrB,KAAI,SAAAd,GAAQ,OAEnB,aADA,CACC,EAAD,CAEIA,SAAUA,GADHA,YCnBnCqC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1fe33087.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const hanleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const hanleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(category=> [inputValue,...category]);\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit = {hanleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={hanleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired,\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=mlrKtpCsWARtdLPHXCrIyqauL1ERSuxn`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    // console.log(data);\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs\r\n    // setimages(gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id,title,url }) => {\r\n    console.log({id,title,url});\r\n    return (\r\n        <div className = \"gif animate__animated animate__fadeIn\">\r\n            <img src = {url} alt = {title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n//rafc\r\nexport const GridGif = ({ category }) => {\r\n\r\n    // const [count, setcount] = useState(0);\r\n    \r\n    const { data :images ,loading}= useFetchGifs( category );\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n            <h2 className = \"gif animate__animated animate__fadeIn\">{category}</h2>\r\n\r\n            {loading && <p className = \"gif animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"cardGrid\">\r\n                {/* <button onClick = {()=>setcount(count+1)}>incremento</button> */}\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport {getGifs} from '../helpers/Getgifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n    \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs => {\r\n            setstate({\r\n                data : imgs,\r\n                loading : false,\r\n            });\r\n        })\r\n    }, [category])\r\n    \r\n    return state; //{data :[], loading : true}\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GridGif } from './components/GridGif';\r\n\r\n// const categories = ['One Punch', 'Samurai x', 'Dragon ball Z', 'Naruto'];\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n    const [categories, setcategories] = useState(['Naruto']);\r\n\r\n    // const agregar =()=>{\r\n\r\n    //     // setcategories([...categories, 'Kimetsu noyaiba']);\r\n    //     setcategories(newCat => [...newCat, 'Kimetsu noyaiba']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h1>GiftExpertApp</h1>\r\n            <AddCategory setCategories={setcategories} />\r\n            <hr></hr>\r\n            {/* <button onClick={agregar}>Agregar</button>     */}\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        //   return <h1 key = {category}>{category}</h1>\r\n                        <GridGif\r\n                            key = {category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GiftExpertApp from './GiftExpertApp';\n\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}